Index: SDETJavaBatch11.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SDETJavaBatch11.iml b/SDETJavaBatch11.iml
new file mode 100644
--- /dev/null	(date 1637247150567)
+++ b/SDETJavaBatch11.iml	(date 1637247150567)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <output url="file://$MODULE_DIR$/bin" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/com/syntax/reviewclass1/class19/Class19Example/EmployeeTester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Class19Example/EmployeeTester.java b/src/com/syntax/reviewclass1/class19/Class19Example/EmployeeTester.java
new file mode 100644
--- /dev/null	(date 1637248133334)
+++ b/src/com/syntax/reviewclass1/class19/Class19Example/EmployeeTester.java	(date 1637248133334)
@@ -0,0 +1,12 @@
+package com.syntax.reviewclass1.class19.Class19Example;
+
+import com.sun.xml.internal.ws.api.model.wsdl.WSDLOutput;
+
+public class EmployeeTester {
+    public static void main(String[] args) {
+        Manager manager=new Manager();
+
+        manager.printSalary();
+        }
+    }
+
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/MathTeacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/MathTeacher.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/MathTeacher.java
new file mode 100644
--- /dev/null	(date 1637247897368)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/MathTeacher.java	(date 1637247897368)
@@ -0,0 +1,12 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task3;
+
+public class MathTeacher extends Teacher {
+
+    void teachingVeryGood() {
+        System.out.println(name + "has been teaching math very good");
+    }
+
+    void solvesHardQuestions() {
+        System.out.println(name + " has been trying to solve very hard questions");
+    }
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1637161265543)
+++ b/.idea/modules.xml	(date 1637161265543)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/SDETJavaBatch11.iml" filepath="$PROJECT_DIR$/SDETJavaBatch11.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1637161265550)
+++ b/.idea/misc.xml	(date 1637161265550)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/classes" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1637161265553)
+++ b/.idea/vcs.xml	(date 1637161265553)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
new file mode 100644
--- /dev/null	(date 1637161265561)
+++ b/.idea/runConfigurations.xml	(date 1637161265561)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/Teacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/Teacher.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/Teacher.java
new file mode 100644
--- /dev/null	(date 1637247897396)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/Teacher.java	(date 1637247897396)
@@ -0,0 +1,24 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task3;
+
+public class Teacher {
+
+  /*  Write a Java program called Teacher.  Identify features and behaviour of that Class.
+  *Create 3 subclasses MathTeacher, ChemistryTeacher and PianoTeacher that would have it
+  * their own features and behaviour. Test all 4 classes
+   */
+
+    String name;
+    char gender;
+    int age;
+    int yearsOfExperience;
+    double salary;
+
+    void teaching() {
+        System.out.println(name+ " has been " + " teaching " + " subject " + " at the school");
+    }
+    void experience(){
+        System.out.println(name+" has "+yearsOfExperience+" years of experience");
+    }
+
+}
+
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/PianoTeacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/PianoTeacher.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/PianoTeacher.java
new file mode 100644
--- /dev/null	(date 1637247897372)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/PianoTeacher.java	(date 1637247897372)
@@ -0,0 +1,11 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task3;
+
+public class PianoTeacher extends Teacher {
+
+    void teacherMusic(){
+        System.out.println(name+ " teaches music at the school");
+    }
+    void knowsHowToPlayPiano(){
+        System.out.println(name+ " knows how play piano");
+    }
+}
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/TeacherTester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/TeacherTester.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/TeacherTester.java
new file mode 100644
--- /dev/null	(date 1637247897353)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/TeacherTester.java	(date 1637247897353)
@@ -0,0 +1,43 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task3;
+
+public class TeacherTester {
+    public static void main(String[] args) {
+        ChemistryTeacher obj=new ChemistryTeacher();
+        obj.name="Mike";
+        obj.age=50;
+        obj.gender='M';
+        obj.yearsOfExperience=10;
+        obj.salary=100000.00;
+        obj.goodteacher();
+        obj.knowsOrganicChemistry();
+
+        System.out.println("*******Cheminstry Teacher*******");
+        System.out.println("    ");
+
+        MathTeacher obj1=new MathTeacher();
+        obj1.name="Sarah";
+        obj1.age=35;
+        obj1.gender='F';
+        obj1.yearsOfExperience=5;
+        obj1.salary=150000.00;
+        obj1.solvesHardQuestions();
+        obj1.teachingVeryGood();
+
+        System.out.println("*******Math Teacher******");
+        System.out.println("    ");
+
+        PianoTeacher obj3=new PianoTeacher();
+        obj3.name="Kate";
+        obj3.age=35;
+        obj3.gender='F';
+        obj3.yearsOfExperience=10;
+        obj3.salary=155000.00;
+        obj3.knowsHowToPlayPiano();
+        obj3.teacherMusic();
+
+        System.out.println("*******Piano Teacher******");
+    }
+
+
+
+}
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassA.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassA.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassA.java
new file mode 100644
--- /dev/null	(date 1637247897407)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassA.java	(date 1637247897407)
@@ -0,0 +1,11 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task2;
+
+public class ClassA {
+
+    //Write program to inherit class A that has method printF which is static and call or reuse that method into class B
+
+    String city;
+    static void printF(){
+        System.out.println("Class A");
+    }
+}
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/ChemistryTeacher.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/ChemistryTeacher.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/ChemistryTeacher.java
new file mode 100644
--- /dev/null	(date 1637247897389)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task3/ChemistryTeacher.java	(date 1637247897389)
@@ -0,0 +1,11 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task3;
+
+public class ChemistryTeacher extends Teacher {
+
+    void knowsOrganicChemistry(){
+        System.out.println(name+ " knows organic chemistry");
+    }
+    void goodteacher(){
+        System.out.println(name+ " is a good teacher");
+    }
+}
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassB.java b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassB.java
new file mode 100644
--- /dev/null	(date 1637247897412)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/src/Task2/ClassB.java	(date 1637247897412)
@@ -0,0 +1,11 @@
+package com.syntax.class18.HWClass18Task1.HWClass18Task2.src.Task2;
+
+public class ClassB extends ClassA{
+    public static void main(String[] args) {
+        ClassA obj=new ClassA();
+        obj.city="Kabul";
+        obj.printF();
+
+    }
+
+}
Index: src/com/syntax/class18/HWClass18Task1/HWClass18Task2/HWClass18Task2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/HWClass18Task2.iml b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/HWClass18Task2.iml
new file mode 100644
--- /dev/null	(date 1637181659553)
+++ b/src/com/syntax/class18/HWClass18Task1/HWClass18Task2/HWClass18Task2.iml	(date 1637181659553)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: src/com/syntax/reviewclass1/class19/Recap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Recap.java b/src/com/syntax/reviewclass1/class19/Recap.java
new file mode 100644
--- /dev/null	(date 1637248133359)
+++ b/src/com/syntax/reviewclass1/class19/Recap.java	(date 1637248133359)
@@ -0,0 +1,5 @@
+package com.syntax.reviewclass1.class19;
+
+public class Recap {
+
+}
Index: src/com/syntax/class18/HWClass18Task1/C.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/C.java b/src/com/syntax/class18/HWClass18Task1/C.java
new file mode 100644
--- /dev/null	(date 1637247897394)
+++ b/src/com/syntax/class18/HWClass18Task1/C.java	(date 1637247897394)
@@ -0,0 +1,4 @@
+package com.syntax.class18.HWClass18Task1;
+
+public class C extends B{
+}
Index: src/com/syntax/reviewclass1/class19/Class19Example/Pet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Class19Example/Pet.java b/src/com/syntax/reviewclass1/class19/Class19Example/Pet.java
new file mode 100644
--- /dev/null	(date 1637248133346)
+++ b/src/com/syntax/reviewclass1/class19/Class19Example/Pet.java	(date 1637248133346)
@@ -0,0 +1,39 @@
+package com.syntax.reviewclass1.class19.Class19Example;
+
+public class Pet {
+
+        String name;
+        String breed;
+        String color;
+        int age;
+
+        Pet() {
+
+        }
+        Pet (String name, String breed, String color, int age){
+
+            this.name=name;
+            this.breed=breed;
+            this.color=color;
+            this.age=age;
+        }
+    }
+
+class Dog extends Pet {
+    Dog(String name, String breed, String color, int age) {
+        super(name, breed, color, age);
+    }
+
+    void print() {
+        System.out.println(name);
+    }
+}
+
+class Cat extends Pet{
+    Cat (String name, String breed, String color, int age){
+        super(name, breed, color, age);
+    }
+    void printAge(){
+        System.out.println(age);
+    }
+}
Index: src/com/syntax/class18/HWClass18Task1/A.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/A.java b/src/com/syntax/class18/HWClass18Task1/A.java
new file mode 100644
--- /dev/null	(date 1637247897382)
+++ b/src/com/syntax/class18/HWClass18Task1/A.java	(date 1637247897382)
@@ -0,0 +1,11 @@
+package com.syntax.class18.HWClass18Task1;
+
+public class A {
+    //Write program for multilevel
+    // inheritance where class A inherited by B
+    // and class B inherit class by C.
+
+
+}
+
+
Index: src/com/syntax/reviewclass1/class19/Task2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Task2.java b/src/com/syntax/reviewclass1/class19/Task2.java
new file mode 100644
--- /dev/null	(date 1637248133350)
+++ b/src/com/syntax/reviewclass1/class19/Task2.java	(date 1637248133350)
@@ -0,0 +1,4 @@
+package com.syntax.reviewclass1.class19;
+
+public class Task2 {
+}
Index: src/com/syntax/class18/HWClass18Task1/B.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/class18/HWClass18Task1/B.java b/src/com/syntax/class18/HWClass18Task1/B.java
new file mode 100644
--- /dev/null	(date 1637247897403)
+++ b/src/com/syntax/class18/HWClass18Task1/B.java	(date 1637247897403)
@@ -0,0 +1,4 @@
+package com.syntax.class18.HWClass18Task1;
+
+public class B extends A {
+}
Index: src/com/syntax/reviewclass1/class19/Task1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Task1.java b/src/com/syntax/reviewclass1/class19/Task1.java
new file mode 100644
--- /dev/null	(date 1637248133356)
+++ b/src/com/syntax/reviewclass1/class19/Task1.java	(date 1637248133356)
@@ -0,0 +1,8 @@
+package com.syntax.reviewclass1.class19;
+
+public class Task1 {
+    //Write program for multilevel inheritance where class A inherited by
+    //	B and class B inherit class by C.
+
+
+}
\ No newline at end of file
Index: src/com/syntax/reviewclass1/class19/Class19Example/PetTester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Class19Example/PetTester.java b/src/com/syntax/reviewclass1/class19/Class19Example/PetTester.java
new file mode 100644
--- /dev/null	(date 1637248133353)
+++ b/src/com/syntax/reviewclass1/class19/Class19Example/PetTester.java	(date 1637248133353)
@@ -0,0 +1,9 @@
+package com.syntax.reviewclass1.class19.Class19Example;
+
+public class PetTester {
+
+    public static void main(String[] args) {
+        Dog dog=new Dog("boby", "Bulldog","black", 10);
+                dog.print();
+    }
+}
Index: src/com/syntax/reviewclass1/class19/Class19Example/Employee.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/syntax/reviewclass1/class19/Class19Example/Employee.java b/src/com/syntax/reviewclass1/class19/Class19Example/Employee.java
new file mode 100644
--- /dev/null	(date 1637248133342)
+++ b/src/com/syntax/reviewclass1/class19/Class19Example/Employee.java	(date 1637248133342)
@@ -0,0 +1,25 @@
+package com.syntax.reviewclass1.class19.Class19Example;
+
+public class Employee {
+
+    String name;
+    int age;
+    int baseSalary=30000;
+    int baseNoDaysOff=20;
+
+    void printSalary(){
+        System.out.println(baseSalary);
+    }
+    void printNoDaysOff(){
+        System.out.println(baseNoDaysOff);
+    }
+}
+
+class Manager extends Employee{
+    int bonus ;
+    int travelingAllowance;
+    void printSalary(){
+        super.printSalary();
+        System.out.println(bonus+travelingAllowance+baseSalary);
+    }
+}
\ No newline at end of file
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
